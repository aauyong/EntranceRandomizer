/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.entrancerando;

import com.mycompany.displaypnl.DisplayPnl;
import com.mycompany.eventhandling.EventHandler;
import com.mycompany.maptracker.MapTracker;
import com.mycompany.entrances.ConnectionHandler;

/**
 * TODO repackage and structure to fit mroe in line with OOP
 * @author blarg
 */
public class EntranceWindow extends javax.swing.JFrame {

    /**
     * Creates new form EntranceWindow
     */
    public EntranceWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING:
     * Do NOT modify this code. The content of this method is always regenerated by the
     * Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        this.dispPnl = new DisplayPnl();
        this.mapTrckr = new MapTracker();
        this.evntHndlr = new EventHandler(dispPnl, mapTrckr);

        sttngsHndlr = SettingsHandler.createInstance(dispPnl, mapTrckr);
        cnnctnHndlr = ConnectionHandler.createInstance();

        getContentPane().setLayout(new java.awt.GridBagLayout());
        getContentPane().add(dispPnl, new java.awt.GridBagConstraints() {{
            anchor = java.awt.GridBagConstraints.NORTH;
            fill = java.awt.GridBagConstraints.BOTH;
            gridy = 1;
            weightx = 1;
            weighty = 1;
        }});
        getContentPane().add(mapTrckr, new java.awt.GridBagConstraints() {{
            weighty = 1;
            weightx = 1;
        }});

        mapTrckr.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 255, 0)));
        dispPnl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));

        initMapPnlListeners();

        mapTrckr.setOtherMinSize(dispPnl.getPreferredSize());
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initMapPnlListeners() {
        // Add resizer listener for mapPnl to update
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                mapTrckr.setOtherMinSize(dispPnl.getPreferredSize());
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static SettingsHandler sttngsHndlr;
    public static ConnectionHandler cnnctnHndlr;
    private DisplayPnl dispPnl;
    private MapTracker mapTrckr;
    private EventHandler evntHndlr;
    // End of variables declaration//GEN-END:variables
}
